
import java.time.Duration;
import java.util.List;
import java.util.NoSuchElementException;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class PaginationTest {

	WebDriver driver;
	int unitTitleIndex;
	List<WebElement> availableUnitTypes;

	@BeforeTest
	public void presetup() {
		try {
			WebDriverManager.chromedriver().setup();
			driver = new ChromeDriver();
			driver.get(
					"https://stg.damacproperties.com/en-ae/projects/damac-tower-nine-elms-london/");
			driver.manage().window().maximize();
			driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		} catch (Exception e) {
			System.err.println("Exception during setup: " + e.getMessage());
		}
	}

	@Test (dependsOnMethods="pagination")
	public void test() throws InterruptedException {

		// Click on 'Select Unit' button
		driver.findElement(By.xpath("//button[text()='Select Unit']")).click();

		boolean unitFound = false;

		// Loop to handle pagination
		while (!unitFound) {
			// Locate the list of available units
			List<WebElement> availableUnitsTitles = driver.findElements(
					By.cssSelector("div.relative div.hidden.md\\:block div[class*='grid units-grid'] div"));
			availableUnitsTitles.stream()
					.filter(availableUnitsTitle -> availableUnitsTitle.getText().equalsIgnoreCase("Unit id"))
					.findFirst().ifPresent(unitTitle -> {
						unitTitleIndex = availableUnitsTitles.indexOf(unitTitle);
					});
			// Locate the corresponding unit elements
			List<WebElement> availableUnits = driver.findElements(By.cssSelector(
					"div.grid.group.units-grid > div.font-secondary.text-s:nth-child(" + (unitTitleIndex + 1) + ")"));

			// Print all available unit texts
			availableUnits.stream().map(WebElement::getText).forEach(System.out::println);

			for (WebElement availableUnit : availableUnits) {
				if (availableUnit.getText().equalsIgnoreCase("AYK/39/3904")) {
					availableUnit.click();
				} else {
					System.out.print(driver.findElement(By.xpath("(//button[@title='Next Page'])[1]")).isDisplayed());
					driver.findElement(By.xpath("(//button[@title='Next Page'])[1]")).click();
				}
			}
		}

	}
	
	@Test
	public void pagination() throws InterruptedException {
		driver.findElement(By.xpath("//button[@type='button'] //span[text()='Select unit']")).click();
		Thread.sleep(3000);
	    WebElement driverLimit = driver.findElement(By.xpath("//div[@data-component='autogeneratedCarousel']"));
	    List<WebElement> availableUnitTypes = driverLimit.findElements(By.cssSelector("h3[class*='items-center']"));
	    
	    boolean unitFound = false;
	    
	    while (!unitFound) {
	        // Check each unit type to find "6 BR Apartments"
	        for (WebElement availableUnitType : availableUnitTypes) {
	            if (availableUnitType.getText().equalsIgnoreCase("5 BR Apartments")) {
	            	availableUnitTypes.stream().map(WebElement::getText).forEach(System.out::println);
	            	System.out.print(availableUnitType.isDisplayed());
	                availableUnitType.click();
	                unitFound = true;
	                break;
	            }
	        }
	        
	        // If not found, try to go to the next page
	        if (!unitFound) {
	            try {
	                WebElement nextPageButton = driver.findElement(By.cssSelector("button[aria-label='Next']"));
	                ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", nextPageButton);
	                nextPageButton.click();
	                Thread.sleep(2000); // Wait for the next page to load
	                
	                // Update the list of available unit types on the new page
	                availableUnitTypes = driverLimit.findElements(By.cssSelector("h3[class*='items-center'] span"));
	            } catch (NoSuchElementException e) {
	                System.err.println("No 'Next' button found. Exiting pagination.");
	                break;
	            } catch (InterruptedException e) {
	                Thread.currentThread().interrupt();
	                System.err.println("Thread was interrupted: " + e.getMessage());
	            }
	        }
	    }
	}


	@AfterMethod
	public void tearDown() {
		try {
			if (driver != null) {
				driver.quit();
			}
		} catch (Exception e) {
			System.err.println("Exception during teardown: " + e.getMessage());
		}
	}
}
